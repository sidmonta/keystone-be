// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
  posts    Post[] @relation("Post_author")
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  subtitle    String    @default("")
  status      String?   @default("draft")
  content     String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Company {
  id           String    @id @default(cuid())
  email        String    @unique @default("")
  name         String    @unique @default("")
  creationDate DateTime? @default(now())
  expireDate   DateTime
  clients      Client[]  @relation("Client_azienda")
  metadata     Metadati? @relation("Company_metadata", fields: [metadataId], references: [id])
  metadataId   String?   @map("metadata")

  @@index([metadataId])
}

model Client {
  id           String         @id @default(cuid())
  email        String         @unique @default("")
  username     String         @unique @default("")
  creationDate DateTime?      @default(now())
  azienda      Company?       @relation("Client_azienda", fields: [aziendaId], references: [id])
  aziendaId    String?        @map("azienda")
  expireDate   DateTime
  impianti     Installation[] @relation("Installation_client")
  role         String?        @default("simple")

  @@index([aziendaId])
}

model Installation {
  id                  String  @id @default(cuid())
  client              Client? @relation("Installation_client", fields: [clientId], references: [id])
  clientId            String? @map("client")
  annoMessaInServizio Int?
  esposizioneImpianto String?
  inverter            String  @default("")
  marcaPannelli       String  @default("")
  name                String  @unique @default("")
  potenzaPannelli     Int?

  @@index([clientId])
}

model Metadati {
  id             String    @id @default(cuid())
  address        String    @default("")
  email          String    @default("")
  housePhone     String    @default("")
  logo_filesize  Int?
  logo_extension String?
  logo_width     Int?
  logo_height    Int?
  logo_mode      String?
  logo_id        String?
  mobilePhone    String    @default("")
  officialName   String    @default("")
  website        String    @default("")
  other          String?
  company        Company[] @relation("Company_metadata")
}